#***************
upstream nextcloud_server_upstream {
	server ${SERVICE_IP}:${SERVICE_PORT};
}

server {
	listen		80;
	listen		[::]:80;
	server_name	${SERVICE_DOMAIN};

	# block request if it contains not the correct domain
	if ($host !~ ^(${SERVICE_DOMAIN}|www.${SERVICE_DOMAIN})$ ) {
		return 444;
	}

	# block request from Bots with folloging user-Agends
	if ($http_user_agent ~* (SemrushBot|MJ12Bot|DotBot|AspiegelBot|Bot|Googlebot)) {
		return 410;
	}

	return 301	https://$http_host$request_uri;
	add_header X-Content-Type-Options "nosniff" always;
	add_header X-XSS-Protection "1; mode=block" always;
	add_header X-Frame-Options "DENY" always;
	add_header Referrer-Policy "strict-origin" always;
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
	server_tokens off;
}

server {
	server_name	${SERVICE_DOMAIN};
	listen 443 ssl;
	#	listen [::]:443 ipv6only=on  ssl;
	ssl_certificate /etc/nginx/ssl/${SERVICE_DOMAIN}/cert.pem;
	ssl_certificate_key /etc/nginx/ssl/${SERVICE_DOMAIN}/key.pem;
	include /etc/nginx/includes/ssl.conf;

	add_header X-Content-Type-Options "nosniff" always;
	add_header X-XSS-Protection "1; mode=block" always;
	add_header X-Frame-Options "DENY" always;
	add_header Referrer-Policy "strict-origin" always;
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
	server_tokens off;

	include /etc/nginx/includes/gzip.conf;

	# block request if it contains not the correct domain
	if ($host !~ ^(${SERVICE_DOMAIN}|www.${SERVICE_DOMAIN})$ ) {
		return 444;
	}

	# block request from Bots with folloging user-Agends
	if ($http_user_agent ~* (SemrushBot|MJ12Bot|DotBot|AspiegelBot|Bot|Googlebot)) {
		return 410;
	}

	location = /robots.txt {
		add_header Content-Type text/plain;
		return 200 "User-agent: *\nDisallow: /\n";
	}

	location / {
		proxy_headers_hash_max_size 512;
		proxy_headers_hash_bucket_size 64;

		proxy_set_header  Host              $http_host;
		proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
		proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header  X-Forwarded-Proto $scheme;
		proxy_read_timeout                  900;

		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Server $host;

		real_ip_header X-Forwarded-For;

		add_header Front-End-Https on;

		# whatever the IP of your cloud server is

		#proxy_pass http://nextcloud_server_upstream$request_uri;
		proxy_pass https://nextcloud_server_upstream$request_uri;
		proxy_redirect off;

		# keeweb webdav config
		if ($http_origin ~ '^https?://(${SERVICE_DOMAIN})') {

			add_header 'Access-Control-Allow-Origin' '*' always;
			add_header 'Access-Control-Allow-Credentials' 'true' always;
			add_header 'Access-Control-Allow-Methods' 'GET, HEAD, POST, PUT, OPTIONS, MOVE, DELETE, COPY, LOCK, UNLOCK' always;
			add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Accept-Charset,X-Accept,origin,accept,if-match,destination,overwrite' always;
			add_header 'Access-Control-Expose-Headers' 'ETag' always;
			add_header 'Access-Control-Max-Age' 1728000 always;
		}

		if ($request_method = 'OPTIONS') {
			add_header 'Content-Type' 'text/plain charset=UTF-8';
			add_header 'Content-Length' 0;
			add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Credentials' 'true';
			add_header 'Access-Control-Allow-Methods' 'GET, HEAD, POST, PUT, OPTIONS, MOVE, DELETE, COPY, LOCK, UNLOCK';
			add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Accept-Charset,X-Accept,origin,accept,if-match,destination,overwrite';
			add_header 'Access-Control-Expose-Headers' 'ETag';
			add_header 'Access-Control-Max-Age' 1728000;
			return 204;
		}

	}
}
