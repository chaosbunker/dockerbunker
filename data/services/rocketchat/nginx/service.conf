map $http_upgrade $connection_upgrade {
	default upgrade;
	''      close;
}

upstream rocketchat {
	server rocketchat-service-dockerbunker:3000;
}

server {
	listen 80;
	server_name	${SERVICE_DOMAIN} www.${SERVICE_DOMAIN};

	# block request if it contains not the correct domain
	if ($host !~ ^(${SERVICE_DOMAIN}|www.${SERVICE_DOMAIN})$ ) {
		return 444;
	}

	# block request from Bots with folloging user-Agends
	if ($http_user_agent ~* (SemrushBot|MJ12Bot|DotBot|AspiegelBot|Bot|Googlebot)) {
		return 410;
	}

	return 301 https://$host$request_uri;

	add_header X-Content-Type-Options "nosniff" always;
	add_header X-XSS-Protection "1; mode=block" always;
	add_header X-Frame-Options "DENY" always;
	add_header Referrer-Policy "strict-origin" always;
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
	server_tokens off;
}

server {
	listen 443 ssl;
	server_name	${SERVICE_DOMAIN} www.${SERVICE_DOMAIN};
	ssl_certificate /etc/nginx/ssl/${SERVICE_DOMAIN}/cert.pem;
	ssl_certificate_key /etc/nginx/ssl/${SERVICE_DOMAIN}/key.pem;
	include /etc/nginx/includes/ssl.conf;

	add_header X-Content-Type-Options "nosniff" always;
	add_header X-XSS-Protection "1; mode=block" always;
	add_header X-Frame-Options "DENY" always;
	add_header Referrer-Policy "strict-origin" always;
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
	server_tokens off;

	include /etc/nginx/includes/gzip.conf;

	# block request if it contains not the correct domain
	if ($host !~ ^(${SERVICE_DOMAIN}|www.${SERVICE_DOMAIN})$ ) {
		return 444;
	}

	# block request from Bots with folloging user-Agends
	if ($http_user_agent ~* (SemrushBot|MJ12Bot|DotBot|AspiegelBot|Bot|Googlebot)) {
		return 410;
	}

	location / {
		proxy_pass http://rocketchat/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forward-Proto http;
		proxy_set_header X-Nginx-Proxy true;
		proxy_redirect off;
	}

	location ~ /.well-known {
		allow all;
		root /var/www/html;
	}
}
